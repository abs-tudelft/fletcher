name: Examples

on:
  push:
    branches:
    - develop
  pull_request:

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64:latest
    env:
      CMAKE_VERSION: '3.17.3'
      ARROW_VERSION: '2.0.0'
      CPYTHON_VERSION: 'cp35-cp35m'
    steps:
    - uses: actions/checkout@v2
    - name: Install Apache Arrow
      run: |
        yum install -y https://apache.bintray.com/arrow/centos/$(cut -d: -f5 /etc/system-release-cpe)/apache-arrow-release-latest.rpm
        yum install -y --enablerepo=epel arrow-devel-$ARROW_VERSION-1.el7 arrow-libs-$ARROW_VERSION-1.el7 arrow-python-devel-$ARROW_VERSION-1.el7 arrow-python-libs-$ARROW_VERSION-1.el7
    - name: Install cmake
      run: curl -L https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz | tar xz --strip-components=1 -C /usr
    - name: Install dependencies
      run: /opt/python/$CPYTHON_VERSION/bin/python -m pip install pyarrow==$ARROW_VERSION auditwheel
    - name: Build wheel
      working-directory: codegen/python
      run: |
        /opt/python/$CPYTHON_VERSION/bin/python setup.py bdist_wheel
        /opt/python/$CPYTHON_VERSION/bin/python -m auditwheel repair build/dist/*.whl
    - uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: codegen/python/wheelhouse/*.whl
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prepare
    env:
      PYTHON_VERSION: '3.5.x'
    strategy:
      fail-fast: false
      matrix:
        source:
        - examples/stringwrite/hardware
        - examples/sum/hardware
        - codegen/test/primmap
        - codegen/test/stringread
        - codegen/test/listprim
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install vhdmmio vhdeps
        python -m pip install --find-links=wheel pyfletchgen
    - uses: ghdl/setup-ghdl-ci@master
      with:
        backend: llvm
    - name: Example
      working-directory: ${{ matrix.source }}
      env:
        FLETCHER_DIR: ${{ github.workspace }}
      run: |
        make
        make sim
