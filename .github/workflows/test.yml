name: Test

on:
  push:
    branches:
    - develop
  pull_request:

env:
  ARROW_VERSION: '2.0.0'

jobs:
  cpp:
    name: 'C++'
    strategy:
      fail-fast: false
      matrix:
        source:
        - codegen/cpp/fletchgen
        - runtime/cpp
        - platforms/echo/runtime
        os:
        - ubuntu-latest
        include:
        - source: codegen/cpp/fletchgen
          os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Apache Arrow
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://apache.bintray.com/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
        sudo apt-get install -y ./apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
        sudo apt-get update
        sudo apt-get install -y libarrow-dev=$ARROW_VERSION-1 libarrow200=$ARROW_VERSION-1
    - name: Install Apache Arrow
      if: matrix.os == 'macos-latest'
      run: |
        brew install apache-arrow
        brew info apache-arrow | head -n1 | grep "$ARROW_VERSION"
    - name: Configure
      run: |
        cmake ${{ matrix.source }} -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug
    - name: Build
      run: |
        make -j
    - name: Test
      run: |
        make test
    
  python:
    name: Python
    strategy:
      fail-fast: false
      matrix:
        source:
        - runtime/python
        - codegen/python
        os:
        - ubuntu-latest
        - macos-latest
        exclude:
        - source: runtime/python
          os: macos-latest
        include:
        - source: runtime/python
          package: pyfletcher
        - source: codegen/python
          package: pyfletchgen
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install Apache Arrow
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://apache.bintray.com/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
        sudo apt-get install -y ./apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
        sudo apt-get update
        sudo apt-get install -y libarrow-dev=$ARROW_VERSION-1 libarrow200=$ARROW_VERSION-1 libarrow-python-dev=$ARROW_VERSION-1 libarrow-python200=$ARROW_VERSION-1
    - name: Install Apache Arrow
      if: matrix.os == 'macos-latest'
      run: |
        brew install apache-arrow
        brew info apache-arrow | head -n1 | grep "$ARROW_VERSION"
    - name: Install pyarrow
      run: pip3 install pyarrow==$ARROW_VERSION setuptools wheel
    - name: Build and install
      working-directory: ${{ matrix.source }}
      run: |
        python3 setup.py build
        python3 setup.py bdist_wheel
        pip3 install build/dist/*.whl
    - name: Import
      run: python3 -c "import ${{ matrix.package }}"

  vhdl:
    name: VHDL
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: ghdl/setup-ghdl-ci@master
      with:
        backend: llvm
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install vhdeps
    - name: vhdeps
      run: vhdeps -i hardware ghdl -- --pattern '*_tc' --pattern ':!*/vhlib/*'
