branches:
  only:
  - master

sudo: required

language: minimal

services:
  - docker

env:
  global:
    - ARROW_VERSION=0.10.0

cache:
  directories:
    - $HOME/docker

before_install:
  - mkdir -p $HOME/docker && ls $HOME/docker/*.tar.gz | xargs -r -I {file} sh -c "zcat {file} | docker load" || true

jobs:
  include:

    - &docker-build
      stage: build
      name: fletchgen
      before_script:
        - export IMG=fletchgen SRC_PATH=codegen/fletchgen
      script:
        - cd $SRC_PATH && docker build -t $IMG:latest --cache-from $IMG:latest --build-arg ARROW_VERSION=$ARROW_VERSION .
      before_cache:
        - docker save $IMG:latest | gzip -2 > $HOME/docker/$IMG.tar.gz

    - <<: *docker-build
      name: runtime
      before_script:
        - export IMG=runtime SRC_PATH=runtime

    - &vhdl
      name: vhdl-93c
      env: STD=93c
      script:
        # this imports all entities in vhdl/ and runs analysis and elaboration
        - docker run --rm -e STD -v `pwd`/hardware/vhdl:/src ghdl/ghdl:ubuntu18-llvm-5.0 bash -c "shopt -s globstar && ghdl -i -v --std=$STD /src/**/*.vhd | grep entity | sed -e 's/entity //' | sed -e 's/ \*\*//' | xargs -L 1 ghdl -m --std=$STD --ieee=synopsys"

    - <<: *vhdl
      name: vhdl-08
      env: STD=08

    - stage: test
      name: stringread
      script:
        - docker run --rm -it -v `pwd`/hardware/test/fletchgen/stringread:/src -v `pwd`/hardware:/hardware -e "FLETCHER_HARDWARE_DIR=/hardware" fletchgen -i src/test.fbs -o src/test_wrapper.vhd -n test -w test_wrapper -s src/test.fbs -d src/test.rb --sim src/sim_top.vhd -x src/test.srec
        # replace the srec path
        - sed -i -e 's/"src\/test.srec"/"src\/test\/fletchgen\/stringread\/test.srec"/' hardware/test/fletchgen/stringread/sim_top.vhd
        - docker run --rm -v `pwd`/hardware:/src ghdl/ghdl:ubuntu18-llvm-5.0 bash -c "shopt -s globstar && ghdl -i /src/**/*.vhd && ghdl -m --ieee=synopsys sim_top && ghdl -r -v --ieee=synopsys sim_top --stop-time=1ms"
