-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filter_hls_fletcher is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    num_entries : IN STD_LOGIC_VECTOR (31 downto 0);
    in_first_name_length_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_first_name_length_V_empty_n : IN STD_LOGIC;
    in_first_name_length_V_read : OUT STD_LOGIC;
    in_first_name_values_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_first_name_values_V_empty_n : IN STD_LOGIC;
    in_first_name_values_V_read : OUT STD_LOGIC;
    in_last_name_length_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_last_name_length_V_empty_n : IN STD_LOGIC;
    in_last_name_length_V_read : OUT STD_LOGIC;
    in_last_name_values_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_last_name_values_V_empty_n : IN STD_LOGIC;
    in_last_name_values_V_read : OUT STD_LOGIC;
    in_zipcode_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_zipcode_V_empty_n : IN STD_LOGIC;
    in_zipcode_V_read : OUT STD_LOGIC;
    filter_name_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    filter_name_ce0 : OUT STD_LOGIC;
    filter_name_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    filter_zipcode : IN STD_LOGIC_VECTOR (31 downto 0);
    out_first_name_length_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_first_name_length_V_full_n : IN STD_LOGIC;
    out_first_name_length_V_write : OUT STD_LOGIC;
    out_first_name_values_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_first_name_values_V_full_n : IN STD_LOGIC;
    out_first_name_values_V_write : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of filter_hls_fletcher is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "filter_hls_fletcher,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.737000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=464,HLS_SYN_LUT=668}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv31_3F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_first_name_length_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_first_name_values_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_5_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_name_length_V_blk_n : STD_LOGIC;
    signal in_last_name_values_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal in_zipcode_V_blk_n : STD_LOGIC;
    signal out_first_name_length_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_7_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_0_s_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_first_name_values_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal e_1_fu_255_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal e_1_reg_410 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal tmp_20_reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal fc_fu_271_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal fc_reg_432 : STD_LOGIC_VECTOR (30 downto 0);
    signal fc_cast_fu_279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fc_cast_reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_292_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal c_1_fu_327_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal c_1_reg_456 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_predicate_op83_write_state4 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal match_0_s_reg_466 : STD_LOGIC_VECTOR (0 downto 0);
    signal matches_1_fu_348_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal matches_1_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_1_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_2_fu_375_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal c_2_reg_483 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_13_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fn_buffer_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal fn_buffer_ce0 : STD_LOGIC;
    signal fn_buffer_we0 : STD_LOGIC;
    signal fn_buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fn_buffer_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal e_reg_182 : STD_LOGIC_VECTOR (30 downto 0);
    signal fc1_reg_193 : STD_LOGIC_VECTOR (30 downto 0);
    signal match_reg_204 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_reg_216 : STD_LOGIC_VECTOR (30 downto 0);
    signal c1_reg_227 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal matches_fu_78 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_cast_fu_246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_261_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal fc1_cast_fu_283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_cast_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c1_cast_fu_366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);

    component filter_hls_fletchbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    fn_buffer_U : component filter_hls_fletchbkb
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fn_buffer_address0,
        ce0 => fn_buffer_ce0,
        we0 => fn_buffer_we0,
        d0 => fn_buffer_d0,
        q0 => fn_buffer_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c1_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((out_first_name_values_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                c1_reg_227 <= c_2_reg_483;
            elsif ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (tmp_7_fu_322_p2 = ap_const_lv1_0) and (match_0_s_fu_342_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c1_reg_227 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    c_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((in_last_name_values_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                c_reg_216 <= c_1_reg_456;
            elsif ((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c_reg_216 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    e_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_13_fu_370_p2 = ap_const_lv1_0) or (match_0_s_reg_466 = ap_const_lv1_0)))) then 
                e_reg_182 <= e_1_reg_410;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                e_reg_182 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    fc1_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                fc1_reg_193 <= tmp_8_fu_292_p2;
            elsif ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                fc1_reg_193 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    match_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((in_last_name_values_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                match_reg_204 <= match_1_fu_360_p2;
            elsif ((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                match_reg_204 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    matches_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_13_fu_370_p2 = ap_const_lv1_0) and (match_0_s_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                matches_fu_78 <= matches_1_reg_470;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                matches_fu_78 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                c_1_reg_456 <= c_1_fu_327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((match_0_s_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                c_2_reg_483 <= c_2_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                e_1_reg_410 <= e_1_fu_255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    fc_cast_reg_437(30 downto 0) <= fc_cast_fu_279_p1(30 downto 0);
                fc_reg_432 <= fc_fu_271_p3;
                tmp_20_reg_415 <= in_first_name_length_V_dout;
                tmp_22_reg_422 <= in_last_name_length_V_dout;
                tmp_23_reg_427 <= in_zipcode_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (tmp_7_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                match_0_s_reg_466 <= match_0_s_fu_342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (ap_predicate_op83_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                matches_1_reg_470 <= matches_1_fu_348_p2;
            end if;
        end if;
    end process;
    fc_cast_reg_437(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, in_first_name_length_V_empty_n, in_first_name_values_V_empty_n, in_last_name_length_V_empty_n, in_last_name_values_V_empty_n, in_zipcode_V_empty_n, out_first_name_length_V_full_n, out_first_name_values_V_full_n, ap_CS_fsm_state2, tmp_fu_250_p2, ap_CS_fsm_state3, tmp_5_fu_287_p2, ap_CS_fsm_state5, ap_CS_fsm_state4, tmp_7_fu_322_p2, ap_CS_fsm_state7, ap_predicate_op83_write_state4, match_0_s_reg_466, ap_CS_fsm_state6, tmp_13_fu_370_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (tmp_7_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (tmp_7_fu_322_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((in_last_name_values_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_13_fu_370_p2 = ap_const_lv1_0) or (match_0_s_reg_466 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((out_first_name_values_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state2_assign_proc : process(in_first_name_length_V_empty_n, in_last_name_length_V_empty_n, in_zipcode_V_empty_n, tmp_fu_250_p2)
    begin
                ap_block_state2 <= (((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_assign_proc : process(in_first_name_values_V_empty_n, tmp_5_fu_287_p2)
    begin
                ap_block_state3 <= ((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(out_first_name_length_V_full_n, ap_predicate_op83_write_state4)
    begin
                ap_block_state4 <= ((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(in_first_name_length_V_empty_n, in_last_name_length_V_empty_n, in_zipcode_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op83_write_state4_assign_proc : process(tmp_7_fu_322_p2, match_0_s_fu_342_p2)
    begin
                ap_predicate_op83_write_state4 <= ((tmp_7_fu_322_p2 = ap_const_lv1_0) and (match_0_s_fu_342_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(in_first_name_length_V_empty_n, in_last_name_length_V_empty_n, in_zipcode_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= matches_fu_78;
    c1_cast_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c1_reg_227),32));
    c_1_fu_327_p2 <= std_logic_vector(unsigned(c_reg_216) + unsigned(ap_const_lv31_1));
    c_2_fu_375_p2 <= std_logic_vector(unsigned(c1_reg_227) + unsigned(ap_const_lv31_1));
    c_cast_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_reg_216),32));
    e_1_fu_255_p2 <= std_logic_vector(unsigned(e_reg_182) + unsigned(ap_const_lv31_1));
    e_cast_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e_reg_182),32));
    fc1_cast_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc1_reg_193),32));
    fc_cast_fu_279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc_fu_271_p3),32));
    fc_fu_271_p3 <= 
        tmp_3_fu_261_p1 when (tmp_4_fu_265_p2(0) = '1') else 
        ap_const_lv31_0;
    filter_name_address0 <= tmp_10_fu_333_p1(6 - 1 downto 0);

    filter_name_ce0_assign_proc : process(out_first_name_length_V_full_n, ap_CS_fsm_state4, ap_predicate_op83_write_state4)
    begin
        if ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            filter_name_ce0 <= ap_const_logic_1;
        else 
            filter_name_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fn_buffer_address0_assign_proc : process(ap_CS_fsm_state3, tmp_5_fu_287_p2, ap_CS_fsm_state6, tmp_6_fu_298_p1, tmp_2_fu_313_p1, tmp_9_fu_303_p2, tmp_14_fu_381_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            fn_buffer_address0 <= tmp_14_fu_381_p1(6 - 1 downto 0);
        elsif (((tmp_9_fu_303_p2 = ap_const_lv1_0) and (tmp_5_fu_287_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            fn_buffer_address0 <= tmp_2_fu_313_p1(6 - 1 downto 0);
        elsif (((tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            fn_buffer_address0 <= tmp_6_fu_298_p1(6 - 1 downto 0);
        else 
            fn_buffer_address0 <= "XXXXXX";
        end if; 
    end process;


    fn_buffer_ce0_assign_proc : process(in_first_name_values_V_empty_n, ap_CS_fsm_state3, tmp_5_fu_287_p2, ap_CS_fsm_state6, tmp_9_fu_303_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_9_fu_303_p2 = ap_const_lv1_0) and (tmp_5_fu_287_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            fn_buffer_ce0 <= ap_const_logic_1;
        else 
            fn_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fn_buffer_d0_assign_proc : process(in_first_name_values_V_dout, ap_CS_fsm_state3, tmp_5_fu_287_p2, tmp_9_fu_303_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if (((tmp_9_fu_303_p2 = ap_const_lv1_0) and (tmp_5_fu_287_p2 = ap_const_lv1_0))) then 
                fn_buffer_d0 <= ap_const_lv8_0;
            elsif ((tmp_5_fu_287_p2 = ap_const_lv1_1)) then 
                fn_buffer_d0 <= in_first_name_values_V_dout;
            else 
                fn_buffer_d0 <= "XXXXXXXX";
            end if;
        else 
            fn_buffer_d0 <= "XXXXXXXX";
        end if; 
    end process;


    fn_buffer_we0_assign_proc : process(in_first_name_values_V_empty_n, ap_CS_fsm_state3, tmp_5_fu_287_p2, tmp_9_fu_303_p2)
    begin
        if (((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_9_fu_303_p2 = ap_const_lv1_0) and (tmp_5_fu_287_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            fn_buffer_we0 <= ap_const_logic_1;
        else 
            fn_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    in_first_name_length_V_blk_n_assign_proc : process(in_first_name_length_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if (((tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_first_name_length_V_blk_n <= in_first_name_length_V_empty_n;
        else 
            in_first_name_length_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_first_name_length_V_read_assign_proc : process(in_first_name_length_V_empty_n, in_last_name_length_V_empty_n, in_zipcode_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_first_name_length_V_read <= ap_const_logic_1;
        else 
            in_first_name_length_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_first_name_values_V_blk_n_assign_proc : process(in_first_name_values_V_empty_n, ap_CS_fsm_state3, tmp_5_fu_287_p2)
    begin
        if (((tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_first_name_values_V_blk_n <= in_first_name_values_V_empty_n;
        else 
            in_first_name_values_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_first_name_values_V_read_assign_proc : process(in_first_name_values_V_empty_n, ap_CS_fsm_state3, tmp_5_fu_287_p2)
    begin
        if ((not(((tmp_5_fu_287_p2 = ap_const_lv1_1) and (in_first_name_values_V_empty_n = ap_const_logic_0))) and (tmp_5_fu_287_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in_first_name_values_V_read <= ap_const_logic_1;
        else 
            in_first_name_values_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_last_name_length_V_blk_n_assign_proc : process(in_last_name_length_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if (((tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_last_name_length_V_blk_n <= in_last_name_length_V_empty_n;
        else 
            in_last_name_length_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_last_name_length_V_read_assign_proc : process(in_first_name_length_V_empty_n, in_last_name_length_V_empty_n, in_zipcode_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_last_name_length_V_read <= ap_const_logic_1;
        else 
            in_last_name_length_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_last_name_values_V_blk_n_assign_proc : process(in_last_name_values_V_empty_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            in_last_name_values_V_blk_n <= in_last_name_values_V_empty_n;
        else 
            in_last_name_values_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_last_name_values_V_read_assign_proc : process(in_last_name_values_V_empty_n, ap_CS_fsm_state5)
    begin
        if (((in_last_name_values_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            in_last_name_values_V_read <= ap_const_logic_1;
        else 
            in_last_name_values_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_zipcode_V_blk_n_assign_proc : process(in_zipcode_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if (((tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_zipcode_V_blk_n <= in_zipcode_V_empty_n;
        else 
            in_zipcode_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_zipcode_V_read_assign_proc : process(in_first_name_length_V_empty_n, in_last_name_length_V_empty_n, in_zipcode_V_empty_n, ap_CS_fsm_state2, tmp_fu_250_p2)
    begin
        if ((not((((tmp_fu_250_p2 = ap_const_lv1_1) and (in_zipcode_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_last_name_length_V_empty_n = ap_const_logic_0)) or ((tmp_fu_250_p2 = ap_const_lv1_1) and (in_first_name_length_V_empty_n = ap_const_logic_0)))) and (tmp_fu_250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_zipcode_V_read <= ap_const_logic_1;
        else 
            in_zipcode_V_read <= ap_const_logic_0;
        end if; 
    end process;

    match_0_s_fu_342_p2 <= (tmp_12_fu_338_p2 and match_reg_204);
    match_1_fu_360_p2 <= (tmp_11_fu_354_p2 and match_reg_204);
    matches_1_fu_348_p2 <= std_logic_vector(unsigned(matches_fu_78) + unsigned(ap_const_lv32_1));

    out_first_name_length_V_blk_n_assign_proc : process(out_first_name_length_V_full_n, ap_CS_fsm_state4, tmp_7_fu_322_p2, match_0_s_fu_342_p2)
    begin
        if (((tmp_7_fu_322_p2 = ap_const_lv1_0) and (match_0_s_fu_342_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_first_name_length_V_blk_n <= out_first_name_length_V_full_n;
        else 
            out_first_name_length_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_first_name_length_V_din <= tmp_20_reg_415;

    out_first_name_length_V_write_assign_proc : process(out_first_name_length_V_full_n, ap_CS_fsm_state4, ap_predicate_op83_write_state4)
    begin
        if ((not(((out_first_name_length_V_full_n = ap_const_logic_0) and (ap_predicate_op83_write_state4 = ap_const_boolean_1))) and (ap_predicate_op83_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_first_name_length_V_write <= ap_const_logic_1;
        else 
            out_first_name_length_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_first_name_values_V_blk_n_assign_proc : process(out_first_name_values_V_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_first_name_values_V_blk_n <= out_first_name_values_V_full_n;
        else 
            out_first_name_values_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_first_name_values_V_din <= fn_buffer_q0;

    out_first_name_values_V_write_assign_proc : process(out_first_name_values_V_full_n, ap_CS_fsm_state7)
    begin
        if (((out_first_name_values_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            out_first_name_values_V_write <= ap_const_logic_1;
        else 
            out_first_name_values_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_reg_216),64));
    tmp_11_fu_354_p2 <= "1" when (in_last_name_values_V_dout = filter_name_q0) else "0";
    tmp_12_fu_338_p2 <= "1" when (tmp_23_reg_427 = filter_zipcode) else "0";
    tmp_13_fu_370_p2 <= "1" when (signed(c1_cast_fu_366_p1) < signed(tmp_20_reg_415)) else "0";
    tmp_14_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c1_reg_227),64));
        tmp_2_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_308_p2),64));

    tmp_3_fu_261_p1 <= in_first_name_length_V_dout(31 - 1 downto 0);
    tmp_4_fu_265_p2 <= "1" when (signed(in_first_name_length_V_dout) > signed(ap_const_lv32_0)) else "0";
    tmp_5_fu_287_p2 <= "1" when (signed(fc1_cast_fu_283_p1) < signed(tmp_20_reg_415)) else "0";
    tmp_6_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fc1_reg_193),64));
    tmp_7_fu_322_p2 <= "1" when (signed(c_cast_fu_318_p1) < signed(tmp_22_reg_422)) else "0";
    tmp_8_fu_292_p2 <= std_logic_vector(unsigned(fc1_reg_193) + unsigned(ap_const_lv31_1));
    tmp_9_fu_303_p2 <= "1" when (fc_reg_432 = ap_const_lv31_3F) else "0";
    tmp_fu_250_p2 <= "1" when (signed(e_cast_fu_246_p1) < signed(num_entries)) else "0";
    tmp_s_fu_308_p2 <= std_logic_vector(unsigned(fc_cast_reg_437) + unsigned(ap_const_lv32_1));
end behav;
